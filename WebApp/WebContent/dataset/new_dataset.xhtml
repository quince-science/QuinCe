<ui:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="http://xmlns.jcp.org/jsf/html"
  xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:p="http://primefaces.org/ui" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:pt="http://xmlns.jcp.org/jsf/passthrough"
  xmlns:c="http://java.sun.com/jsp/jstl/core"
  template="/WEB-INF/templates/basic_page.xhtml">
  <ui:define name="title">New Dataset</ui:define>
  <ui:define name="localHead">
    <h:outputScript name="script/dataSets.js" />
    <h:outputScript name="script/vis-timeline-graph2d.min.js" />
    <h:outputScript name="script/dateFormat.js" />
    <h:outputStylesheet name="style/vis-timeline-graph2d.min.css" />
    <h:outputStylesheet name="style/dataSets.css" />
  </ui:define>
  <ui:define name="pageTitle">#{dataSetsBean.currentInstrument.name} - New Data Set</ui:define>
  <ui:define name="content">
    <p:dialog header="Invalid dataset" widgetVar="invalidDatasetDlg" modal="true">
      You selected an area that already has a data set defined.
      <h:panelGrid columns="1" cellpadding="5" class="buttonPanel">
        <p:button
          value="OK"
          onclick="PF('invalidDatasetDlg').hide();return false;" />
      </h:panelGrid>
    </p:dialog>
    <h:form id="uploadForm" method="post" charset="utf8">
      <f:passThroughAttribute name="data-valid-calibration"
        value="#{dataSetsBean.validCalibration}" />
      <f:passThroughAttribute name="data-valid-calibration-message"
        value="#{dataSetsBean.validCalibrationMessage}" />
      <div class="fullPage">
        <div id="timelineContainer"></div>
        <script>
          var groups = JSON.parse('#{dataSetsBean.fileDefinitionsJson}');
          var dataSetJSON = JSON.parse('#{dataSetsBean.timelineEntriesJson}');
          var calibrationsJSON = JSON.parse('#{dataSetsBean.calibrationsJson}');
          var dataSetNames = JSON.parse('#{dataSetsBean.dataSetNamesJson}');

          $(document).ready(function() {
            // Make sure DOM is loaded before calling this
            PF('pAddButton').disable();
            drawTimeline();
          });
        </script>
        <h:panelGrid columns="2" cellpadding="5" class="buttonPanel">
          <p:outputLabel for="dataSetName" value="Data Set Name:" />
          <p:inputText id="dataSetName" widgetVar="pDataSetName"
            value="#{dataSetsBean.newDataSet.name}"
            onkeyup="processNewDataSet('start');"
            pt:data-platform-code="#{dataSetsBean.currentInstrument.platformCode}" />
          <p:outputLabel for="startDate" value="Start Date" />
          <p:outputLabel for="endDate" value="End Date" />
          <p:datePicker id="startDate" widgetVar="startDate"
            value="#{dataSetsBean.newDataSet.start}" timeInput="true"
            pattern="yyyy-MM-dd HH:mm:ss"
            monthNavigator="true" yearNavigator="true"
            onMonthChange="autoSelectDay"
            onYearChange="autoSelectDay"
            onchange="processNewDataSet('start');">
          </p:datePicker>
          <p:datePicker id="endDate" widgetVar="endDate"
            value="#{dataSetsBean.newDataSet.end}" timeInput="true"
            pattern="yyyy-MM-dd HH:mm:ss"
            monthNavigator="true" yearNavigator="true"
            onMonthChange="autoSelectDay"
            onYearChange="autoSelectDay"
            onchange="processNewDataSet('end');">
          </p:datePicker>
        </h:panelGrid>
        <div id="errorList" class="errors hidden"></div>
      </div>
      <h:panelGrid columns="1" class="buttonPanel">
        <div class="instructions">
          Note: The dataset dates may change to align with valid data in the files.
        </div>
      </h:panelGrid>
      <h:panelGrid columns="2" cellpadding="5" class="buttonPanel">
        <p:commandButton id="addButton" widgetVar="pAddButton"
          value="Add Data Set"
          onclick="checkCalibrationProcessForm(); return false;" />
        <p:commandButton value="Cancel" ajax="false"
          action="#{dataSetsBean.goToList}" immediate="true" />
      </h:panelGrid>
      <p:remoteCommand name="checkCalibrationProcessForm"
        actionListener="#{dataSetsBean.checkValidCalibration}"
        update="uploadForm" oncomplete="processNewDataSet('submit')" />
      <p:remoteCommand name="addDataSet"
        actionListener="#{dataSetsBean.addDataSet}"
        oncomplete="window.location.href='dataset_list.xhtml'" />
    </h:form>
  </ui:define>
</ui:composition>
