<ui:composition xmlns="http://www.w3.org/1999/xhtml"
  xmlns:h="http://xmlns.jcp.org/jsf/html"
  xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
  xmlns:p="http://primefaces.org/ui" xmlns:f="http://xmlns.jcp.org/jsf/core"
  xmlns:c="http://java.sun.com/jsp/jstl/core"
  template="/WEB-INF/templates/plot_page.xhtml">

  <ui:param name="beanName" value="manualQualityControlBean" />

  <ui:define name="localHead">
    <h:outputScript name="script/manualQc.js" />
  </ui:define>

  <ui:define name="pageStatus">
    <h:inputHidden id="neededFlagCounts" value="#{sessionScope[beanName].neededFlagCounts}"/>
    <ui:fragment rendered="#{sessionScope[beanName].canEdit}">
      Flags needed: <span id="totalFlagsNeeded"></span>
    </ui:fragment>
  </ui:define>

  <ui:define name="selectionFormEntries">
    <p:remoteCommand name="submitAutoQC" action="#{sessionScope[beanName].acceptAutoQC}"
      partialSubmit="true"
      process="selectedColumn selectedRows"
      update=":plotPageForm:error :plot1Form:plot1Data :plot1Form:plot1Flags :plot2Form:plot2Data :plot2Form:plot2Flags :statusForm"
      onstart="itemLoading(UPDATE_DATA, true)"
      oncomplete="qcFlagsAccepted()" />

    <p:remoteCommand name="generateUserQCComments"
      action="#{sessionScope[beanName].data.generateUserComment}"
      partialSubmit="true" process="selectedColumn selectedRows"
      update="manualFlag manualComment :plotPageForm:error"
      oncomplete="showFlagDialog()" />

    <p:remoteCommand name="applyManualFlag"
      action="#{sessionScope[beanName].applyManualFlag}"
      process="selectedColumn selectedRows manualFlag manualComment"
      update=":plotPageForm:error :plot1Form:plot1Data :plot1Form:plot1Flags :plot2Form:plot2Data :plot2Form:plot2Flags :statusForm"
      onstart="itemLoading(UPDATE_DATA, false)"
      oncomplete="qcFlagsAccepted()" />

  </ui:define>

  <ui:define name="selectionDialog">
    <p:dialog widgetVar="flagDialog" modal="true" header="Set QC Flag"
      width="50%">

      <p:selectOneRadio widgetVar="flagMenu" id="manualFlag"
        value="#{sessionScope[beanName].data.userFlag}" var="flag"
        onchange="updateFlagDialogControls()" layout="custom">

        <f:selectItem itemLabel="Good" itemValue="2" />
        <f:selectItem itemLabel="Questionable" itemValue="3" />
        <f:selectItem itemLabel="Bad" itemValue="4" />
      </p:selectOneRadio>


      <div class="dialogTitle">
        Set QC Flag for <span id="manualRowCount">row count</span>
      </div>


      <h:panelGrid columns="2" width="100%" id="manualFlag_panel">
      <p:outputLabel for="manualFlag" value="Flag:" />

    <h:panelGrid columns="6" id="flagButtons">
      <p:radioButton id="goodFlag" for="manualFlag" itemIndex="0"/>
      <p:outputLabel for="goodFlag" value="Good" />
      <p:radioButton id="questionableFlag" for="manualFlag" itemIndex="1"/>
      <p:outputLabel id="questionableLabel" for="questionableFlag" value="Questionable" />
      <p:radioButton id="badFlag" for="manualFlag" itemIndex="2"/>
      <p:outputLabel for="badFlag" value="Bad" />
    </h:panelGrid>

        <p:outputLabel for="manualComment" value="Comment:" />
        <p:inputTextarea widgetVar="manualComment" id="manualComment"
          value="#{sessionScope[beanName].data.userComment}"
          maxlength="255" style="width: 95%; height: 150px;"
          onkeyup="updateFlagDialogControls()" />
      </h:panelGrid>
      <h:panelGrid columns="2" styleClass="buttonPanel">
        <p:commandButton widgetVar="manualCommentOk" value="OK"
          onclick="saveManualComment();" />
        <p:commandButton value="Cancel" onclick="PF('flagDialog').hide(); return false;" />
      </h:panelGrid>
    </p:dialog>
  </ui:define>

  <ui:define name="selectionActions">
    <p:commandButton widgetVar="acceptQcButton" value="Accept Automatic QC"
      onclick="acceptAutoQc(); return false;" styleClass="inlineButton tightTextButton" />
    <p:commandButton widgetVar="overrideQcButton" value="Override Automatic QC"
      onclick="startUserQcFlags(); return false;" styleClass="inlineButton tightTextButton" />
  </ui:define>

</ui:composition>
